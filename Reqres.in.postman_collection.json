{
	"info": {
		"_postman_id": "320980fe-203f-4fc6-a693-0ee9c000e43d",
		"name": "Reqres.in",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23077283"
	},
	"item": [
		{
			"name": "List Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Assert Page 1, per_page 6, total 12, total_pages 2 \", () => {\r",
							"    pm.expect(responseJson.page).to.eql(1);\r",
							"    pm.expect(responseJson.per_page).to.eql(6);\r",
							"    pm.expect(responseJson.total).to.eql(12);\r",
							"    pm.expect(responseJson.total_pages).to.eql(2)\r",
							"}) "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}api/users?page=1",
					"host": [
						"{{URL}}api"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Assert Name is Putra, and Job is QA Engineer\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.name).to.eql(\"Putra\");\r",
							"    pm.expect(responseJson.job).to.eql(\"QA Engineer\");\r",
							"}) \r",
							"\r",
							"pm.test(\"Successful POST request\", () => {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{JSON_CREATE_USER}}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}api/users",
					"host": [
						"{{URL}}api"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Assert Name is morpheus\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.name).to.eql(\"morpheus\");\r",
							"}) "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{JSON_UPDATE_USER}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}api/users/2",
					"host": [
						"{{URL}}api"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", () => {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{URL}}api/users/2",
					"host": [
						"{{URL}}api"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		}
	]
}